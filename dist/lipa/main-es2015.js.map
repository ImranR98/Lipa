{"version":3,"sources":["./src/app/services/settings.service.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/error404/error404.component.ts","./src/app/error404/error404.component.html","./src/app/app.module.ts","./src/app/main/results-dialog/results-dialog.component.ts","./src/app/main/results-dialog/results-dialog.component.html","./src/app/results-container/results-container.component.html","./src/app/results-container/results-container.component.ts","./src/app/help/help.component.ts","./src/app/help/help.component.html","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  defaultCurrencyDP = 2\n  defaultTaxPercentage = 0\n\n  constructor() { }\n\n  getCurrencyDP(): number {\n    try {\n      let storedCurrencyDPString = localStorage.getItem('currencyDP')\n      if (storedCurrencyDPString == null) throw null\n      let storedCurrencyDPS = Number.parseInt(storedCurrencyDPString)\n      if (storedCurrencyDPS < 0 || storedCurrencyDPS > 4) throw null\n      return storedCurrencyDPS\n    } catch (err) {\n      return this.defaultCurrencyDP\n    }\n  }\n\n  setCurrencyDP(currencyDP: number): void {\n    try {\n      let givenCurrencyDP = Number.parseInt(currencyDP.toString())\n      if (givenCurrencyDP < 0 || givenCurrencyDP > 4) throw null\n      localStorage.setItem('currencyDP', givenCurrencyDP.toString())\n    } catch (err) {\n      localStorage.setItem('currencyDP', this.defaultCurrencyDP.toString())\n    }\n  }\n\n  getTaxPercentage(): number {\n    try {\n      let storedTaxPercentageString = localStorage.getItem('TaxPercentage')\n      if (storedTaxPercentageString == null) throw null\n      let storedTaxPercentage = Number.parseInt(storedTaxPercentageString)\n      if (storedTaxPercentage < 0 || storedTaxPercentage > 100) throw null\n      return storedTaxPercentage\n    } catch (err) {\n      return this.defaultTaxPercentage\n    }\n  }\n\n  setTaxPercentage(TaxPercentage: number): void {\n    try {\n      let givenTaxPercentage = Number.parseInt(TaxPercentage.toString())\n      if (givenTaxPercentage < 0 || givenTaxPercentage > 100) throw null\n      localStorage.setItem('TaxPercentage', givenTaxPercentage.toString())\n    } catch (err) {\n      localStorage.setItem('TaxPercentage', this.defaultTaxPercentage.toString())\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Lipa calculates the amount each person owes when splitting a receipt.</h1>\n    <p fxLayout=\"row\" fxLayoutAlign=\"start center\"><a href=\"https://github.com/ImranR98/lipa\" target=\"_blank\"\n            class=\"hiddenLink\">Code available on</a>&nbsp;&nbsp;<a href=\"https://github.com/ImranR98/lipa\"\n            target=\"_blank\"><img src='../../assets/git.png' class=\"picAsIcon\"></a></p>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport html2canvas from 'html2canvas'\nimport * as FileSaver from 'file-saver';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss']\n})\nexport class ResultsComponent implements OnInit {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  @ViewChild('resultsDiv') resultsDiv: ElementRef\n\n  url = `${window.location.protocol}//${window.location.host}`\n\n  @Input() results: {\n    items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy: number, costPerPerson: number }[],\n    people: { name: string, items: { item: string, chippingIn: boolean, cost: number }[], totalCost: number }[],\n    settings: { currencyDP: number, taxPercentage: number },\n    total: number\n  }\n\n  @Input() isDialog: boolean = false\n\n  roundingError: number = 0\n  actualTotal: number = 0\n\n  amountColumns: string[] = ['name', 'items', 'totalCost']\n  breakdownColumns: string[] = ['item', 'cost', 'quantity', 'taxed', 'dividedBy', 'costPerPerson']\n\n  ngOnInit(): void {\n    this.results.people.forEach(person => this.actualTotal += this.roundOffByDPSetting(person.totalCost))\n    this.actualTotal = this.roundOffByDPSetting(this.actualTotal)\n  }\n\n  roundOffByDPSetting(num: number): number {\n    let divideBy = '1'\n    for (let i = 0; i < this.results.settings.currencyDP; i++) divideBy += '0'\n    return (Math.round((num + Number.EPSILON) * Number.parseInt(divideBy)) / Number.parseInt(divideBy))\n  }\n\n  base64EncodeResults(): string {\n    return btoa(JSON.stringify(this.results))\n  }\n\n  showCopySnackbar(): void {\n    this.snackBar.open('Link has been copied. Note: Other Apps may cut off some characters of the link, making it useless. Downloading as image is recommended instead.', 'Dismiss')\n  }\n\n  download() {\n    html2canvas(this.resultsDiv.nativeElement).then((canvas) => {\n      canvas.toBlob((blob) => {\n        let now = new Date()\n        FileSaver.saveAs(blob, `Lipa-result-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}-${now.getHours()}-${now.getMinutes()}.png`)\n      }, 'image/png')\n    }).catch(err => {\n      console.log(err)\n      this.snackBar.open('Error', 'Dismiss', { duration: 5000 })\n    })\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"resultsDiv\" #resultsDiv>\n        <div fxFlex.sm=\"50%\" fxFlex.gt-sm=\"50%\">\n            <div class=\"stdPadding amountsDiv\">\n                <strong>Amounts</strong>\n            </div>\n            <mat-divider></mat-divider>\n            <table mat-table [dataSource]=\"results.people\" class=\"width100\">\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef>Name</th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.name}} </td>\n                    <td mat-footer-cell *matFooterCellDef><strong>Total</strong><em\n                            *ngIf=\"actualTotal != roundOffByDPSetting(results.total)\"> * see note *</em>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"items\">\n                    <th mat-header-cell *matHeaderCellDef>&nbsp;Items</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <div fxLayout=\"column\">\n                            <span *ngFor=\"let item of element.items; let i = index;\">\n                                <span\n                                    *ngIf=\"item.chippingIn\">{{item.item + ' @' + roundOffByDPSetting(item.cost)}}</span>\n                            </span>\n                        </div>\n                    </td>\n                    <td mat-footer-cell *matFooterCellDef></td>\n                </ng-container>\n                <ng-container matColumnDef=\"totalCost\">\n                    <th mat-header-cell *matHeaderCellDef>Amount</th>\n                    <td mat-cell *matCellDef=\"let element\">{{roundOffByDPSetting(element.totalCost)}} </td>\n                    <td mat-footer-cell *matFooterCellDef>{{actualTotal}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"amountColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: amountColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"amountColumns;\"></tr>\n            </table>\n            <div *ngIf=\"actualTotal < roundOffByDPSetting(results.total) || actualTotal > roundOffByDPSetting(results.total)\"\n                [class.stdMarginLeft]=\"!isDialog\" [class.stdMarginRight]=\"!isDialog\" class=\"stdMarginTop\">\n                <p *ngIf=\"actualTotal < roundOffByDPSetting(results.total)\">\n                    <strong>*</strong> The actual total is <strong>{{roundOffByDPSetting(results.total)}}</strong>,\n                    so\n                    <strong>{{roundOffByDPSetting(roundOffByDPSetting(results.total) - actualTotal)}}</strong>\n                    remains due to rounding errors and cannot be divided further. It should be added to someone's\n                    cost.\n                </p>\n                <p *ngIf=\"actualTotal > roundOffByDPSetting(results.total)\">\n                    <strong>*</strong> The actual total is <strong>{{roundOffByDPSetting(results.total)}}</strong>,\n                    so\n                    <strong>{{roundOffByDPSetting(actualTotal - roundOffByDPSetting(results.total))}}</strong>\n                    is extra due to rounding errors and cannot be divided further. It should be discounted from\n                    someone's cost.\n                </p>\n            </div>\n        </div>\n        <mat-divider [vertical]=\"true\"></mat-divider>\n        <div fxFlex.sm=\"50%\" fxFlex.gt-sm=\"50%\">\n            <div class=\"stdPadding breakdownDiv\">\n                <strong>Breakdown</strong>\n            </div>\n            <mat-divider></mat-divider>\n            <table mat-table [dataSource]=\"results.items\" class=\"width100\">\n                <ng-container matColumnDef=\"item\">\n                    <th mat-header-cell *matHeaderCellDef>Item</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.item}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"cost\">\n                    <th mat-header-cell *matHeaderCellDef>Cost</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{roundOffByDPSetting(element.cost)}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"quantity\">\n                    <th mat-header-cell *matHeaderCellDef>Qty.</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"taxed\">\n                    <th mat-header-cell *matHeaderCellDef>Tax</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{element.taxed ? results.settings.taxPercentage + '% ': 'N/A'}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"dividedBy\">\n                    <th mat-header-cell *matHeaderCellDef>People</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.dividedBy}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"costPerPerson\">\n                    <th mat-header-cell *matHeaderCellDef>Cost/Person</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{roundOffByDPSetting(element.costPerPerson)}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"breakdownColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: breakdownColumns;\"></tr>\n            </table>\n        </div>\n    </div>\n    <div [class.stdMarginLeft]=\"!isDialog\" [class.stdMarginRight]=\"!isDialog\" class=\"stdMarginTop stdMarginBottom\"\n        fxLayout=\"column\" fxLayoutAlign=\"default start\" fxLayoutAlign.lt-sm=\"default default\" fxLayoutGap=\"1em\">\n        <button mat-raised-button color=\"accent\" (click)=\"download()\" class=\"stdMarginBottom\">Download as\n            Image</button>\n        <a href=\"javascript:;\" [cdkCopyToClipboard]=\"url + '/results?data=' + base64EncodeResults()\"\n            (click)=\"showCopySnackbar()\"><small>Copy Link\n                (not recommended)</small></a>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'lipa';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/\" style=\"height: 0;\"></a>\n      <a mat-list-item routerLink=\"/main\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> Main </a>\n      <a mat-list-item routerLink=\"/help\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> Help </a>\n      <a mat-list-item routerLink=\"/about\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> About </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content fxLayout=\"column\">\n    <mat-toolbar fxLayout=\"row\" fxLayoutGap=\"1em\" color=\"primary\" style=\"padding-top: 1em; padding-bottom: 1em;\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <a routerLink=\"/\" class=\"hiddenLink\">Lipa</a>\n    </mat-toolbar>\n    <div>\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.scss']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Error 404</h1>\n    <p>The page you're looking for isn't here.</p>\n</div>","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MainComponent } from './main/main.component'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatListModule } from '@angular/material/list'\nimport { MatTabsModule } from '@angular/material/tabs'\nimport { HelpComponent } from './help/help.component'\nimport { AboutComponent } from './about/about.component'\nimport { Error404Component } from './error404/error404.component'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { SettingsComponent } from './settings/settings.component'\nimport { ResultsComponent } from './results/results.component'\nimport { ResultsDialogComponent } from './main/results-dialog/results-dialog.component'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatTableModule } from '@angular/material/table'\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { ResultsContainerComponent } from './results-container/results-container.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    HelpComponent,\n    AboutComponent,\n    Error404Component,\n    SettingsComponent,\n    ResultsComponent,\n    ResultsDialogComponent,\n    ResultsContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTabsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatTableModule,\n    ClipboardModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-results-dialog',\n  templateUrl: './results-dialog.component.html',\n  styleUrls: ['./results-dialog.component.scss']\n})\nexport class ResultsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ResultsDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: {\n    items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy: number, costPerPerson: number }[],\n    people: { name: string, items: { item: string, chippingIn: boolean, cost?: number }[], totalCost?: number }[],\n    settings: { currencyDP: number, taxPercentage: number },\n    total: number\n  }) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-title>\n    Results\n</div>\n<button mat-mini-fab (click)=\"close()\" color=\"warn\" class=\"closeDialogButton\">\n    <mat-icon>close</mat-icon>\n</button>\n<app-results [results]=\"data\" [isDialog]=\"true\"></app-results>","<div class=\"height100\">\n    <app-results *ngIf=\"results\" [results]=\"results\"></app-results>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-results-container',\n  templateUrl: './results-container.component.html',\n  styleUrls: ['./results-container.component.scss']\n})\nexport class ResultsContainerComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, private snackBar: MatSnackBar, private router: Router) { }\n\n  results = null\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params['data']) this.results = JSON.parse(atob(params['data']))\n      else {\n        this.snackBar.open('No data!', 'Dismiss', { duration: 5000 })\n        this.router.navigate(['/'])\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Help</h1>\n    <p>Lipa calculates the amount each person owes when splitting a receipt.</p>\n    <p>The Main page consists of 2 tabs - 'Items' and 'People'. The first tab asks for the list of items on the receipt,\n        and the second tab asks for the list of people, and the item distribution.</p>\n    <h3>Items tab</h3>\n    <ol>\n        <li>Fill in the Item name, cost, quantity, and taxable status of the first item on your receipt.</li>\n        <li>Click '+ Add Item' to add the second item, and repeat as above, until all items are listed.</li>\n        <li>The trashcan icon is used to delete the item.</li>\n    </ol>\n    <h3>People tab</h3>\n    <ol>\n        <li>Fill in the first person's name.</li>\n        <li>Check the boxes for each item the person was involved in buying.</li>\n        <li>Click '+ Add Person' to add the second person, and repeat as above, until all people are listed.</li>\n        <li>The trashcan icon is used to delete the person.</li>\n    </ol>\n    <h3>Calculate and save</h3>\n    <ul>\n        <li>Once both tabs are filled and valid, you can click the Calculate button to view results.</li>\n        <li>Results can be saved as an image.</li>\n        <li>You can also copy a link to view the results directly on Lipa, but this is not recommended as the link can\n            be quite long and may be cut off by other Apps, making the link useless in those cases.\n        </li>\n    </ul>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { HelpComponent } from './help/help.component';\nimport { AboutComponent } from './about/about.component';\nimport { Error404Component } from './error404/error404.component';\nimport { ResultsContainerComponent } from './results-container/results-container.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/main'\n  },\n  {\n    path: 'main',\n    component: MainComponent\n  },\n  {\n    path: 'results',\n    component: ResultsContainerComponent\n  },\n  {\n    path: 'help',\n    component: HelpComponent\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: '404',\n    component: Error404Component\n  },\n  {\n    path: '**',\n    redirectTo: '/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SettingsService } from '../services/settings.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ResultsDialogComponent } from './results-dialog/results-dialog.component';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  subs: Subscription[] = []\n\n  itemsForm: FormGroup\n  peopleForm: FormGroup\n  allPeopleHaveAnItem: boolean = false\n\n  settingsService: SettingsService = new SettingsService()\n\n  settingsForm: FormGroup = new FormGroup({\n    currencyDP: new FormControl(this.settingsService.getCurrencyDP()),\n    taxPercentage: new FormControl(this.settingsService.getTaxPercentage()),\n  })\n\n  constructor(private formBuilder: FormBuilder, private snackBar: MatSnackBar, private dialog: MatDialog) { }\n\n  get items(): FormArray {\n    return this.itemsForm.get('items') as FormArray\n  }\n  get people(): FormArray {\n    return this.peopleForm.get('people') as FormArray\n  }\n\n  ngOnInit(): void {\n    this.itemsForm = this.formBuilder.group({\n      items: this.formBuilder.array([])\n    })\n    this.peopleForm = this.formBuilder.group({\n      people: this.formBuilder.array([])\n    })\n    this.subs.push(this.items.valueChanges.subscribe(() => this.handleChanges()))\n    this.subs.push(this.people.valueChanges.subscribe(() => this.handleChanges()))\n    this.subs.push(this.settingsForm.valueChanges.subscribe((value: { currencyDP: number, taxPercentage: number }) => {\n      if (value.taxPercentage == 0) {\n        this.items.controls.forEach(item => {\n          item.get('taxed').setValue(false)\n          item.get('taxed').disable()\n        })\n      } else {\n        this.items.controls.forEach(item => item.get('taxed').enable())\n      }\n      this.settingsService.setCurrencyDP(value.currencyDP)\n      this.settingsService.setTaxPercentage(value.taxPercentage)\n    }))\n    this.addItem()\n    this.addPerson()\n  }\n\n  createItem(): FormGroup {\n    return new FormGroup({\n      item: new FormControl('', Validators.required),\n      cost: new FormControl(null, Validators.required),\n      quantity: new FormControl(1, Validators.required),\n      taxed: new FormControl({ value: this.settingsForm.controls['taxPercentage'].value > 0, disabled: this.settingsForm.controls['taxPercentage'].value == 0 }),\n    })\n  }\n\n  createPerson(): FormGroup {\n    return new FormGroup({\n      name: new FormControl('', Validators.required),\n      items: this.formBuilder.array([])\n    })\n  }\n\n  ifDuplicateItems(): boolean {\n    return Array.from(new Set(this.items.value.map(item => item.item))).length < this.items.value.length\n  }\n\n  ifDuplicatePeople(): boolean {\n    return Array.from(new Set(this.people.value.map(person => person.name))).length < this.people.value.length\n  }\n\n  addItem(): void {\n    if (!this.itemsForm.valid || this.ifDuplicateItems()) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else this.items.push(this.createItem())\n  }\n\n  addPerson(): void {\n    if (!this.peopleForm.valid || this.ifDuplicatePeople()) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else this.people.push(this.createPerson())\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index)\n  }\n\n  removePerson(index: number): void {\n    this.people.removeAt(index)\n  }\n\n  numberOfDecimalPlacesToHTMLStepValue(dp: number): number {\n    if (dp == 0) return 1\n    else if (dp > 0) {\n      let temp = '0.'\n      for (let i = 0; i < (dp - 1); i++) temp += '0'\n      temp += '1'\n      return Number.parseFloat(temp)\n    } else return 0.01\n  }\n\n  handleChanges(): void {\n    // Go through each item from itemsForm\n    // On every loop of above, loop through each person in peopleForm and go through their items FormArray\n    // If the item exists in itemsForm but not that persons items array, add it to their array\n    this.items.controls.filter(item => item.valid).forEach(item => {\n      this.people.controls.forEach((person: FormGroup) => {\n        let exists = false;\n        (person.get('items') as FormArray).controls.forEach(personItem => {\n          if (personItem.get('item').value == item.get('item').value) exists = true\n        })\n        if (!exists) (person.get('items') as FormArray).push(new FormGroup({\n          item: new FormControl(item.get('item').value, Validators.required),\n          chippingIn: new FormControl(false)\n        }))\n      })\n    })\n    // Similar to above, but for removal\n    // Loops through peopleForm, then itemsForm in the inner loop\n    this.people.controls.forEach(person => {\n      (person.get('items') as FormArray).controls.forEach((personItem, index: number) => {\n        let exists = false\n        this.items.controls.filter(item => item.valid).forEach(item => {\n          if (personItem.get('item').value == item.get('item').value) exists = true\n        })\n        if (!exists) (person.get('items') as FormArray).removeAt(index)\n      })\n    })\n    // Check if everyone has at least one item\n    let tempAllPeopleHaveAnItem = true\n    this.people.controls.forEach(person => {\n      let atLeastOneItem = false;\n      (person.get('items') as FormArray).controls.forEach(personItem => {\n        if (personItem.get('chippingIn').value) atLeastOneItem = true\n      })\n      if (!atLeastOneItem) tempAllPeopleHaveAnItem = false\n    })\n    this.allPeopleHaveAnItem = tempAllPeopleHaveAnItem\n  }\n\n  calculate() {\n    if (!this.itemsForm.valid || this.ifDuplicateItems() || !this.peopleForm.valid || this.ifDuplicatePeople() || !this.allPeopleHaveAnItem || !this.settingsForm.valid) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else {\n      let items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy?: number, costPerPerson?: number }[] = this.itemsForm.get('items').value\n      let people: { name: string, items: { item: string, chippingIn: boolean, cost?: number }[], totalCost?: number }[] = this.peopleForm.get('people').value\n      let settings: { currencyDP: number, taxPercentage: number } = this.settingsForm.value\n      let total = 0\n      items = items.map(item => {\n        item.dividedBy = 0\n        people.forEach(person => person.items.forEach(personItem => {\n          if (item.item == personItem.item && personItem.chippingIn) item.dividedBy++\n        }))\n        item.costPerPerson = ((item.taxed ? item.cost + (item.cost * settings.taxPercentage / 100) : item.cost) * item.quantity) / item.dividedBy\n        return item\n      })\n      let allItemsUsed = true\n      items.forEach(item => {\n        if (item.dividedBy == 0) allItemsUsed = false\n      })\n      if (allItemsUsed) {\n        people = people.map(person => {\n          person.totalCost = 0\n          person.items = person.items.map(personItem => {\n            items.forEach(item => {\n              if (item.item == personItem.item && personItem.chippingIn) {\n                personItem.cost = item.costPerPerson\n                person.totalCost += item.costPerPerson\n              }\n            })\n            return personItem\n          })\n          total += person.totalCost\n          return person\n        })\n        let finalResult = { items: items, people: people, settings: settings, total: total }\n        this.dialog.open(ResultsDialogComponent, {\n          data: finalResult,\n          maxWidth: '100vw',\n          width: '100%',\n          height: '100vh'\n        })\n      } else {\n        this.snackBar.open('One or more items were not taken by anyone!', 'Dismiss', { duration: 5000 })\n      }\n    }\n  }\n\n  showTaxedMessage() {\n    if (this.settingsForm.controls['taxPercentage'].value == 0)\n      this.snackBar.open('Enter the tax % at the bottom of the page.', 'Okay', { duration: 5000 })\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe())\n  }\n\n}","<div fxLayout=\"column\" class=\"stdMarginBottom\">\n    <mat-tab-group>\n        <mat-tab label=\"Items\">\n            <form [formGroup]=\"itemsForm\" fxLayout=\"column\" fxLayoutGap=\"1em\" class=\"stdMarginTop\" class=\"stdPadding\">\n                <div formArrayName=\"items\" *ngFor=\"let item of itemsForm.get('items')['controls']; let i = index;\">\n                    <div [formGroupName]=\"i\">\n                        <div fxLayout=\"column\" fxLayoutGap=\"1em\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n                                <mat-form-field fxFlex=\"50%\">\n                                    <input matInput formControlName=\"item\" placeholder=\"Item\" type=\"text\" required>\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"30%\">\n                                    <input matInput formControlName=\"cost\" placeholder=\"Cost\" type=\"number\" min=\"0\"\n                                        [step]=\"numberOfDecimalPlacesToHTMLStepValue(this.settingsForm.controls['currencyDP'].value)\"\n                                        oninput=\"validity.valid||(value='');\" required>\n                                </mat-form-field>\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxFlex=\"20%\">\n                                    <div></div>\n                                    <button mat-icon-button color=\"warn\" aria-label=\"delete\" [disabled]=\"i == 0\"\n                                        (click)=\"removeItem(i)\">\n                                        <mat-icon>delete_outline</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxFlex=\"100%\">\n                                <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"quantity\" placeholder=\"Quantity\" type=\"number\"\n                                            min=\"1\" step=\"1\" oninput=\"validity.valid||(value='');\" required>\n                                    </mat-form-field>\n                                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                                        <mat-checkbox matInput formControlName=\"taxed\" (click)=\"showTaxedMessage()\">Taxed\n                                        </mat-checkbox>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div></div>\n                    <button mat-button color=\"primary\" (click)=\"addItem()\"\n                        [disabled]=\"!itemsForm.valid || ifDuplicateItems()\">\n                        + Add Item\n                    </button>\n                </div>\n            </form>\n        </mat-tab>\n\n        <mat-tab label=\"People\">\n            <form [formGroup]=\"peopleForm\" fxLayout=\"column\" fxLayoutGap=\"1em\" class=\"stdMarginTop\" class=\"stdPadding\">\n                <div formArrayName=\"people\" *ngFor=\"let person of peopleForm.get('people')['controls']; let i = index;\">\n                    <div [formGroupName]=\"i\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n                        <div fxLayout=\"column\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"space-between center\">\n                                <mat-form-field>\n                                    <input matInput formControlName=\"name\" placeholder=\"Name\" type=\"text\" required>\n                                </mat-form-field>\n                                <button mat-icon-button color=\"warn\" aria-label=\"delete\" [disabled]=\"i == 0\"\n                                    (click)=\"removePerson(i)\">\n                                    <mat-icon>delete_outline</mat-icon>\n                                </button>\n                            </div>\n                            <div fxLayout=\"row wrap\" fxLayoutGap=\"1em\">\n                                <div formArrayName=\"items\"\n                                    *ngFor=\"let personItem of person.get('items')['controls']; let i = index;\">\n                                    <div [formGroupName]=\"i\">\n                                        <mat-checkbox matInput formControlName=\"chippingIn\">\n                                            {{personItem.get('item').value}}\n                                        </mat-checkbox>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div></div>\n                    <button mat-button color=\"primary\" (click)=\"addPerson()\"\n                        [disabled]=\"!peopleForm.valid || ifDuplicatePeople() || !allPeopleHaveAnItem\">\n                        + Add Person\n                    </button>\n                </div>\n            </form>\n        </mat-tab>\n    </mat-tab-group>\n\n    <div class=\"stdMarginLeft stdMarginRight\">\n        <mat-divider></mat-divider>\n    </div>\n\n    <form [formGroup]=\"settingsForm\" fxLayout=\"row\" fxLayoutGap=\"1em\" class=\"stdPadding\">\n        <mat-form-field fxFlex=\"30%\">\n            <input matInput formControlName=\"taxPercentage\" placeholder=\"Tax %\" type=\"number\" min=\"0\" step=\"1\" max=\"100\"\n                oninput=\"validity.valid||(value='');\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"30%\">\n            <input matInput formControlName=\"currencyDP\" placeholder=\"Currency Decimal Places\" type=\"number\" min=\"0\"\n                step=\"1\" max=\"5\" oninput=\"validity.valid||(value='');\">\n        </mat-form-field>\n    </form>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <button mat-raised-button color=\"primary\"\n            [disabled]=\"!itemsForm.valid || ifDuplicateItems() || !peopleForm.valid || ifDuplicatePeople() || !allPeopleHaveAnItem || !settingsForm.valid\"\n            (click)=\"calculate()\">\n            Calculate\n        </button>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
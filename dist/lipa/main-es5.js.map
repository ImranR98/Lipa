{"version":3,"sources":["webpack:///src/app/services/settings.service.ts","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/results/results.component.ts","webpack:///src/app/results/results.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/error404/error404.component.ts","webpack:///src/app/error404/error404.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main/results-dialog/results-dialog.component.ts","webpack:///src/app/main/results-dialog/results-dialog.component.html","webpack:///src/app/results-container/results-container.component.html","webpack:///src/app/results-container/results-container.component.ts","webpack:///src/app/help/help.component.ts","webpack:///src/app/help/help.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SettingsService","defaultCurrencyDP","defaultTaxPercentage","storedCurrencyDPString","localStorage","getItem","storedCurrencyDPS","Number","parseInt","err","currencyDP","givenCurrencyDP","toString","setItem","storedTaxPercentageString","storedTaxPercentage","TaxPercentage","givenTaxPercentage","SettingsComponent","AboutComponent","environment","production","apiUrl","ResultsComponent","snackBar","url","window","location","protocol","host","isDialog","roundingError","actualTotal","amountColumns","breakdownColumns","results","people","forEach","person","roundOffByDPSetting","totalCost","num","divideBy","i","settings","Math","round","EPSILON","btoa","JSON","stringify","open","resultsDiv","nativeElement","then","canvas","toBlob","blob","now","Date","getFullYear","getMonth","getDay","getHours","getMinutes","console","log","duration","download","showCopySnackbar","AppComponent","title","Error404Component","AppModule","register","enabled","ResultsDialogComponent","dialogRef","data","close","ResultsContainerComponent","activatedRoute","router","queryParams","subscribe","params","parse","atob","navigate","HelpComponent","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","relativeLinkResolution","MainComponent","formBuilder","dialog","subs","allPeopleHaveAnItem","settingsService","settingsForm","getCurrencyDP","taxPercentage","getTaxPercentage","itemsForm","get","peopleForm","group","items","array","push","valueChanges","handleChanges","value","controls","item","setValue","disable","enable","setCurrencyDP","setTaxPercentage","addItem","addPerson","required","cost","quantity","taxed","disabled","name","Array","from","Set","map","length","valid","ifDuplicateItems","createItem","ifDuplicatePeople","createPerson","index","removeAt","dp","temp","parseFloat","filter","exists","personItem","chippingIn","tempAllPeopleHaveAnItem","atLeastOneItem","total","dividedBy","costPerPerson","allItemsUsed","finalResult","maxWidth","width","height","sub","unsubscribe","calculate","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  defaultCurrencyDP = 2\n  defaultTaxPercentage = 0\n\n  constructor() { }\n\n  getCurrencyDP(): number {\n    try {\n      let storedCurrencyDPString = localStorage.getItem('currencyDP')\n      if (storedCurrencyDPString == null) throw null\n      let storedCurrencyDPS = Number.parseInt(storedCurrencyDPString)\n      if (storedCurrencyDPS < 0 || storedCurrencyDPS > 4) throw null\n      return storedCurrencyDPS\n    } catch (err) {\n      return this.defaultCurrencyDP\n    }\n  }\n\n  setCurrencyDP(currencyDP: number): void {\n    try {\n      let givenCurrencyDP = Number.parseInt(currencyDP.toString())\n      if (givenCurrencyDP < 0 || givenCurrencyDP > 4) throw null\n      localStorage.setItem('currencyDP', givenCurrencyDP.toString())\n    } catch (err) {\n      localStorage.setItem('currencyDP', this.defaultCurrencyDP.toString())\n    }\n  }\n\n  getTaxPercentage(): number {\n    try {\n      let storedTaxPercentageString = localStorage.getItem('TaxPercentage')\n      if (storedTaxPercentageString == null) throw null\n      let storedTaxPercentage = Number.parseInt(storedTaxPercentageString)\n      if (storedTaxPercentage < 0 || storedTaxPercentage > 100) throw null\n      return storedTaxPercentage\n    } catch (err) {\n      return this.defaultTaxPercentage\n    }\n  }\n\n  setTaxPercentage(TaxPercentage: number): void {\n    try {\n      let givenTaxPercentage = Number.parseInt(TaxPercentage.toString())\n      if (givenTaxPercentage < 0 || givenTaxPercentage > 100) throw null\n      localStorage.setItem('TaxPercentage', givenTaxPercentage.toString())\n    } catch (err) {\n      localStorage.setItem('TaxPercentage', this.defaultTaxPercentage.toString())\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Lipa calculates the amount each person owes when splitting a receipt.</h1>\n    <p fxLayout=\"row\" fxLayoutAlign=\"start center\"><a href=\"https://github.com/ImranR98/lipa\" target=\"_blank\"\n            class=\"hiddenLink\">Code available on</a>&nbsp;&nbsp;<a href=\"https://github.com/ImranR98/lipa\"\n            target=\"_blank\"><img src='../../assets/git.png' class=\"picAsIcon\"></a></p>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport html2canvas from 'html2canvas'\nimport * as FileSaver from 'file-saver';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss']\n})\nexport class ResultsComponent implements OnInit {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  @ViewChild('resultsDiv') resultsDiv: ElementRef\n\n  url = `${window.location.protocol}//${window.location.host}`\n\n  @Input() results: {\n    items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy: number, costPerPerson: number }[],\n    people: { name: string, items: { item: string, chippingIn: boolean, cost: number }[], totalCost: number }[],\n    settings: { currencyDP: number, taxPercentage: number },\n    total: number\n  }\n\n  @Input() isDialog: boolean = false\n\n  roundingError: number = 0\n  actualTotal: number = 0\n\n  amountColumns: string[] = ['name', 'items', 'totalCost']\n  breakdownColumns: string[] = ['item', 'cost', 'quantity', 'taxed', 'dividedBy', 'costPerPerson']\n\n  ngOnInit(): void {\n    this.results.people.forEach(person => this.actualTotal += this.roundOffByDPSetting(person.totalCost))\n    this.actualTotal = this.roundOffByDPSetting(this.actualTotal)\n  }\n\n  roundOffByDPSetting(num: number): number {\n    let divideBy = '1'\n    for (let i = 0; i < this.results.settings.currencyDP; i++) divideBy += '0'\n    return (Math.round((num + Number.EPSILON) * Number.parseInt(divideBy)) / Number.parseInt(divideBy))\n  }\n\n  base64EncodeResults(): string {\n    return btoa(JSON.stringify(this.results))\n  }\n\n  showCopySnackbar(): void {\n    this.snackBar.open('Link has been copied. Note: Other Apps may cut off some characters of the link, making it useless. Downloading as image is recommended instead.', 'Dismiss')\n  }\n\n  download() {\n    html2canvas(this.resultsDiv.nativeElement).then((canvas) => {\n      canvas.toBlob((blob) => {\n        let now = new Date()\n        FileSaver.saveAs(blob, `Lipa-result-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}-${now.getHours()}-${now.getMinutes()}.png`)\n      }, 'image/png')\n    }).catch(err => {\n      console.log(err)\n      this.snackBar.open('Error', 'Dismiss', { duration: 5000 })\n    })\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"resultsDiv\" #resultsDiv>\n        <div fxFlex.sm=\"50%\" fxFlex.gt-sm=\"50%\">\n            <div class=\"stdPadding amountsDiv\">\n                <strong>Amounts</strong>\n            </div>\n            <mat-divider></mat-divider>\n            <table mat-table [dataSource]=\"results.people\" class=\"width100\">\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef>Name</th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.name}} </td>\n                    <td mat-footer-cell *matFooterCellDef><strong>Total</strong><em\n                            *ngIf=\"actualTotal != roundOffByDPSetting(results.total)\"> * see note *</em>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"items\">\n                    <th mat-header-cell *matHeaderCellDef>&nbsp;Items</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <div fxLayout=\"column\">\n                            <span *ngFor=\"let item of element.items; let i = index;\">\n                                <span\n                                    *ngIf=\"item.chippingIn\">{{item.item + ' @' + roundOffByDPSetting(item.cost)}}</span>\n                            </span>\n                        </div>\n                    </td>\n                    <td mat-footer-cell *matFooterCellDef></td>\n                </ng-container>\n                <ng-container matColumnDef=\"totalCost\">\n                    <th mat-header-cell *matHeaderCellDef>Amount</th>\n                    <td mat-cell *matCellDef=\"let element\">{{roundOffByDPSetting(element.totalCost)}} </td>\n                    <td mat-footer-cell *matFooterCellDef>{{actualTotal}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"amountColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: amountColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"amountColumns;\"></tr>\n            </table>\n            <div *ngIf=\"actualTotal < roundOffByDPSetting(results.total) || actualTotal > roundOffByDPSetting(results.total)\"\n                [class.stdMarginLeft]=\"!isDialog\" [class.stdMarginRight]=\"!isDialog\" class=\"stdMarginTop\">\n                <p *ngIf=\"actualTotal < roundOffByDPSetting(results.total)\">\n                    <strong>*</strong> The actual total is <strong>{{roundOffByDPSetting(results.total)}}</strong>,\n                    so\n                    <strong>{{roundOffByDPSetting(roundOffByDPSetting(results.total) - actualTotal)}}</strong>\n                    remains due to rounding errors and cannot be divided further. It should be added to someone's\n                    cost.\n                </p>\n                <p *ngIf=\"actualTotal > roundOffByDPSetting(results.total)\">\n                    <strong>*</strong> The actual total is <strong>{{roundOffByDPSetting(results.total)}}</strong>,\n                    so\n                    <strong>{{roundOffByDPSetting(actualTotal - roundOffByDPSetting(results.total))}}</strong>\n                    is extra due to rounding errors and cannot be divided further. It should be discounted from\n                    someone's cost.\n                </p>\n            </div>\n        </div>\n        <mat-divider [vertical]=\"true\"></mat-divider>\n        <div fxFlex.sm=\"50%\" fxFlex.gt-sm=\"50%\">\n            <div class=\"stdPadding breakdownDiv\">\n                <strong>Breakdown</strong>\n            </div>\n            <mat-divider></mat-divider>\n            <table mat-table [dataSource]=\"results.items\" class=\"width100\">\n                <ng-container matColumnDef=\"item\">\n                    <th mat-header-cell *matHeaderCellDef>Item</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.item}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"cost\">\n                    <th mat-header-cell *matHeaderCellDef>Cost</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{roundOffByDPSetting(element.cost)}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"quantity\">\n                    <th mat-header-cell *matHeaderCellDef>Qty.</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"taxed\">\n                    <th mat-header-cell *matHeaderCellDef>Tax</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{element.taxed ? results.settings.taxPercentage + '% ': 'N/A'}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"dividedBy\">\n                    <th mat-header-cell *matHeaderCellDef>People</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.dividedBy}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"costPerPerson\">\n                    <th mat-header-cell *matHeaderCellDef>Cost/Person</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{roundOffByDPSetting(element.costPerPerson)}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"breakdownColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: breakdownColumns;\"></tr>\n            </table>\n        </div>\n    </div>\n    <div [class.stdMarginLeft]=\"!isDialog\" [class.stdMarginRight]=\"!isDialog\" class=\"stdMarginTop stdMarginBottom\"\n        fxLayout=\"column\" fxLayoutAlign=\"default start\" fxLayoutAlign.lt-sm=\"default default\" fxLayoutGap=\"1em\">\n        <button mat-raised-button color=\"accent\" (click)=\"download()\" class=\"stdMarginBottom\">Download as\n            Image</button>\n        <a href=\"javascript:;\" [cdkCopyToClipboard]=\"url + '/results?data=' + base64EncodeResults()\"\n            (click)=\"showCopySnackbar()\"><small>Copy Link\n                (not recommended)</small></a>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'lipa';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/\" style=\"height: 0;\"></a>\n      <a mat-list-item routerLink=\"/main\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> Main </a>\n      <a mat-list-item routerLink=\"/help\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> Help </a>\n      <a mat-list-item routerLink=\"/about\" routerLinkActive=\"nav-list-active\" (click)=\"sidenav.close()\" fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"> About </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content fxLayout=\"column\">\n    <mat-toolbar fxLayout=\"row\" fxLayoutGap=\"1em\" color=\"primary\" style=\"padding-top: 1em; padding-bottom: 1em;\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <a routerLink=\"/\" class=\"hiddenLink\">Lipa</a>\n    </mat-toolbar>\n    <div>\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.scss']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Error 404</h1>\n    <p>The page you're looking for isn't here.</p>\n</div>","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MainComponent } from './main/main.component'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatListModule } from '@angular/material/list'\nimport { MatTabsModule } from '@angular/material/tabs'\nimport { HelpComponent } from './help/help.component'\nimport { AboutComponent } from './about/about.component'\nimport { Error404Component } from './error404/error404.component'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { SettingsComponent } from './settings/settings.component'\nimport { ResultsComponent } from './results/results.component'\nimport { ResultsDialogComponent } from './main/results-dialog/results-dialog.component'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatTableModule } from '@angular/material/table'\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { ResultsContainerComponent } from './results-container/results-container.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    HelpComponent,\n    AboutComponent,\n    Error404Component,\n    SettingsComponent,\n    ResultsComponent,\n    ResultsDialogComponent,\n    ResultsContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTabsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatTableModule,\n    ClipboardModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-results-dialog',\n  templateUrl: './results-dialog.component.html',\n  styleUrls: ['./results-dialog.component.scss']\n})\nexport class ResultsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ResultsDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: {\n    items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy: number, costPerPerson: number }[],\n    people: { name: string, items: { item: string, chippingIn: boolean, cost?: number }[], totalCost?: number }[],\n    settings: { currencyDP: number, taxPercentage: number },\n    total: number\n  }) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-title>\n    Results\n</div>\n<button mat-mini-fab (click)=\"close()\" color=\"warn\" class=\"closeDialogButton\">\n    <mat-icon>close</mat-icon>\n</button>\n<app-results [results]=\"data\" [isDialog]=\"true\"></app-results>","<div class=\"height100\">\n    <app-results *ngIf=\"results\" [results]=\"results\"></app-results>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-results-container',\n  templateUrl: './results-container.component.html',\n  styleUrls: ['./results-container.component.scss']\n})\nexport class ResultsContainerComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, private snackBar: MatSnackBar, private router: Router) { }\n\n  results = null\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params['data']) this.results = JSON.parse(atob(params['data']))\n      else {\n        this.snackBar.open('No data!', 'Dismiss', { duration: 5000 })\n        this.router.navigate(['/'])\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"stdMargin\">\n    <h1>Help</h1>\n    <p>Lipa calculates the amount each person owes when splitting a receipt.</p>\n    <p>The Main page consists of 2 tabs - 'Items' and 'People'. The first tab asks for the list of items on the receipt,\n        and the second tab asks for the list of people, and the item distribution.</p>\n    <h3>Items tab</h3>\n    <ol>\n        <li>Fill in the Item name, cost, quantity, and taxable status of the first item on your receipt.</li>\n        <li>Click '+ Add Item' to add the second item, and repeat as above, until all items are listed.</li>\n        <li>The trashcan icon is used to delete the item.</li>\n    </ol>\n    <h3>People tab</h3>\n    <ol>\n        <li>Fill in the first person's name.</li>\n        <li>Check the boxes for each item the person was involved in buying.</li>\n        <li>Click '+ Add Person' to add the second person, and repeat as above, until all people are listed.</li>\n        <li>The trashcan icon is used to delete the person.</li>\n    </ol>\n    <h3>Calculate and save</h3>\n    <ul>\n        <li>Once both tabs are filled and valid, you can click the Calculate button to view results.</li>\n        <li>Results can be saved as an image.</li>\n        <li>You can also copy a link to view the results directly on Lipa, but this is not recommended as the link can\n            be quite long and may be cut off by other Apps, making the link useless in those cases.\n        </li>\n    </ul>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { HelpComponent } from './help/help.component';\nimport { AboutComponent } from './about/about.component';\nimport { Error404Component } from './error404/error404.component';\nimport { ResultsContainerComponent } from './results-container/results-container.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/main'\n  },\n  {\n    path: 'main',\n    component: MainComponent\n  },\n  {\n    path: 'results',\n    component: ResultsContainerComponent\n  },\n  {\n    path: 'help',\n    component: HelpComponent\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: '404',\n    component: Error404Component\n  },\n  {\n    path: '**',\n    redirectTo: '/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SettingsService } from '../services/settings.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ResultsDialogComponent } from './results-dialog/results-dialog.component';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  subs: Subscription[] = []\n\n  itemsForm: FormGroup\n  peopleForm: FormGroup\n  allPeopleHaveAnItem: boolean = false\n\n  settingsService: SettingsService = new SettingsService()\n\n  settingsForm: FormGroup = new FormGroup({\n    currencyDP: new FormControl(this.settingsService.getCurrencyDP()),\n    taxPercentage: new FormControl(this.settingsService.getTaxPercentage()),\n  })\n\n  constructor(private formBuilder: FormBuilder, private snackBar: MatSnackBar, private dialog: MatDialog) { }\n\n  get items(): FormArray {\n    return this.itemsForm.get('items') as FormArray\n  }\n  get people(): FormArray {\n    return this.peopleForm.get('people') as FormArray\n  }\n\n  ngOnInit(): void {\n    this.itemsForm = this.formBuilder.group({\n      items: this.formBuilder.array([])\n    })\n    this.peopleForm = this.formBuilder.group({\n      people: this.formBuilder.array([])\n    })\n    this.subs.push(this.items.valueChanges.subscribe(() => this.handleChanges()))\n    this.subs.push(this.people.valueChanges.subscribe(() => this.handleChanges()))\n    this.subs.push(this.settingsForm.valueChanges.subscribe((value: { currencyDP: number, taxPercentage: number }) => {\n      if (value.taxPercentage == 0) {\n        this.items.controls.forEach(item => {\n          item.get('taxed').setValue(false)\n          item.get('taxed').disable()\n        })\n      } else {\n        this.items.controls.forEach(item => item.get('taxed').enable())\n      }\n      this.settingsService.setCurrencyDP(value.currencyDP)\n      this.settingsService.setTaxPercentage(value.taxPercentage)\n    }))\n    this.addItem()\n    this.addPerson()\n  }\n\n  createItem(): FormGroup {\n    return new FormGroup({\n      item: new FormControl('', Validators.required),\n      cost: new FormControl(null, Validators.required),\n      quantity: new FormControl(1, Validators.required),\n      taxed: new FormControl({ value: this.settingsForm.controls['taxPercentage'].value > 0, disabled: this.settingsForm.controls['taxPercentage'].value == 0 }),\n    })\n  }\n\n  createPerson(): FormGroup {\n    return new FormGroup({\n      name: new FormControl('', Validators.required),\n      items: this.formBuilder.array([])\n    })\n  }\n\n  ifDuplicateItems(): boolean {\n    return Array.from(new Set(this.items.value.map(item => item.item))).length < this.items.value.length\n  }\n\n  ifDuplicatePeople(): boolean {\n    return Array.from(new Set(this.people.value.map(person => person.name))).length < this.people.value.length\n  }\n\n  addItem(): void {\n    if (!this.itemsForm.valid || this.ifDuplicateItems()) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else this.items.push(this.createItem())\n  }\n\n  addPerson(): void {\n    if (!this.peopleForm.valid || this.ifDuplicatePeople()) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else this.people.push(this.createPerson())\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index)\n  }\n\n  removePerson(index: number): void {\n    this.people.removeAt(index)\n  }\n\n  numberOfDecimalPlacesToHTMLStepValue(dp: number): number {\n    if (dp == 0) return 1\n    else if (dp > 0) {\n      let temp = '0.'\n      for (let i = 0; i < (dp - 1); i++) temp += '0'\n      temp += '1'\n      return Number.parseFloat(temp)\n    } else return 0.01\n  }\n\n  handleChanges(): void {\n    // Go through each item from itemsForm\n    // On every loop of above, loop through each person in peopleForm and go through their items FormArray\n    // If the item exists in itemsForm but not that persons items array, add it to their array\n    this.items.controls.filter(item => item.valid).forEach(item => {\n      this.people.controls.forEach((person: FormGroup) => {\n        let exists = false;\n        (person.get('items') as FormArray).controls.forEach(personItem => {\n          if (personItem.get('item').value == item.get('item').value) exists = true\n        })\n        if (!exists) (person.get('items') as FormArray).push(new FormGroup({\n          item: new FormControl(item.get('item').value, Validators.required),\n          chippingIn: new FormControl(false)\n        }))\n      })\n    })\n    // Similar to above, but for removal\n    // Loops through peopleForm, then itemsForm in the inner loop\n    this.people.controls.forEach(person => {\n      (person.get('items') as FormArray).controls.forEach((personItem, index: number) => {\n        let exists = false\n        this.items.controls.filter(item => item.valid).forEach(item => {\n          if (personItem.get('item').value == item.get('item').value) exists = true\n        })\n        if (!exists) (person.get('items') as FormArray).removeAt(index)\n      })\n    })\n    // Check if everyone has at least one item\n    let tempAllPeopleHaveAnItem = true\n    this.people.controls.forEach(person => {\n      let atLeastOneItem = false;\n      (person.get('items') as FormArray).controls.forEach(personItem => {\n        if (personItem.get('chippingIn').value) atLeastOneItem = true\n      })\n      if (!atLeastOneItem) tempAllPeopleHaveAnItem = false\n    })\n    this.allPeopleHaveAnItem = tempAllPeopleHaveAnItem\n  }\n\n  calculate() {\n    if (!this.itemsForm.valid || this.ifDuplicateItems() || !this.peopleForm.valid || this.ifDuplicatePeople() || !this.allPeopleHaveAnItem || !this.settingsForm.valid) this.snackBar.open('Invalid input!', 'Dismiss', { duration: 5000 })\n    else {\n      let items: { item: string, cost: number, quantity: number, taxed: boolean, dividedBy?: number, costPerPerson?: number }[] = this.itemsForm.get('items').value\n      let people: { name: string, items: { item: string, chippingIn: boolean, cost?: number }[], totalCost?: number }[] = this.peopleForm.get('people').value\n      let settings: { currencyDP: number, taxPercentage: number } = this.settingsForm.value\n      let total = 0\n      items = items.map(item => {\n        item.dividedBy = 0\n        people.forEach(person => person.items.forEach(personItem => {\n          if (item.item == personItem.item && personItem.chippingIn) item.dividedBy++\n        }))\n        item.costPerPerson = ((item.taxed ? item.cost + (item.cost * settings.taxPercentage / 100) : item.cost) * item.quantity) / item.dividedBy\n        return item\n      })\n      let allItemsUsed = true\n      items.forEach(item => {\n        if (item.dividedBy == 0) allItemsUsed = false\n      })\n      if (allItemsUsed) {\n        people = people.map(person => {\n          person.totalCost = 0\n          person.items = person.items.map(personItem => {\n            items.forEach(item => {\n              if (item.item == personItem.item && personItem.chippingIn) {\n                personItem.cost = item.costPerPerson\n                person.totalCost += item.costPerPerson\n              }\n            })\n            return personItem\n          })\n          total += person.totalCost\n          return person\n        })\n        let finalResult = { items: items, people: people, settings: settings, total: total }\n        this.dialog.open(ResultsDialogComponent, {\n          data: finalResult,\n          maxWidth: '100vw',\n          width: '100%',\n          height: '100vh'\n        })\n      } else {\n        this.snackBar.open('One or more items were not taken by anyone!', 'Dismiss', { duration: 5000 })\n      }\n    }\n  }\n\n  showTaxedMessage() {\n    if (this.settingsForm.controls['taxPercentage'].value == 0)\n      this.snackBar.open('Enter the tax % at the bottom of the page.', 'Okay', { duration: 5000 })\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe())\n  }\n\n}","<div fxLayout=\"column\" class=\"stdMarginBottom\">\n    <mat-tab-group>\n        <mat-tab label=\"Items\">\n            <form [formGroup]=\"itemsForm\" fxLayout=\"column\" fxLayoutGap=\"1em\" class=\"stdMarginTop\" class=\"stdPadding\">\n                <div formArrayName=\"items\" *ngFor=\"let item of itemsForm.get('items')['controls']; let i = index;\">\n                    <div [formGroupName]=\"i\">\n                        <div fxLayout=\"column\" fxLayoutGap=\"1em\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n                                <mat-form-field fxFlex=\"50%\">\n                                    <input matInput formControlName=\"item\" placeholder=\"Item\" type=\"text\" required>\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"30%\">\n                                    <input matInput formControlName=\"cost\" placeholder=\"Cost\" type=\"number\" min=\"0\"\n                                        [step]=\"numberOfDecimalPlacesToHTMLStepValue(this.settingsForm.controls['currencyDP'].value)\"\n                                        oninput=\"validity.valid||(value='');\" required>\n                                </mat-form-field>\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxFlex=\"20%\">\n                                    <div></div>\n                                    <button mat-icon-button color=\"warn\" aria-label=\"delete\" [disabled]=\"i == 0\"\n                                        (click)=\"removeItem(i)\">\n                                        <mat-icon>delete_outline</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxFlex=\"100%\">\n                                <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"quantity\" placeholder=\"Quantity\" type=\"number\"\n                                            min=\"1\" step=\"1\" oninput=\"validity.valid||(value='');\" required>\n                                    </mat-form-field>\n                                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                                        <mat-checkbox matInput formControlName=\"taxed\" (click)=\"showTaxedMessage()\">Taxed\n                                        </mat-checkbox>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div></div>\n                    <button mat-button color=\"primary\" (click)=\"addItem()\"\n                        [disabled]=\"!itemsForm.valid || ifDuplicateItems()\">\n                        + Add Item\n                    </button>\n                </div>\n            </form>\n        </mat-tab>\n\n        <mat-tab label=\"People\">\n            <form [formGroup]=\"peopleForm\" fxLayout=\"column\" fxLayoutGap=\"1em\" class=\"stdMarginTop\" class=\"stdPadding\">\n                <div formArrayName=\"people\" *ngFor=\"let person of peopleForm.get('people')['controls']; let i = index;\">\n                    <div [formGroupName]=\"i\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n                        <div fxLayout=\"column\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"space-between center\">\n                                <mat-form-field>\n                                    <input matInput formControlName=\"name\" placeholder=\"Name\" type=\"text\" required>\n                                </mat-form-field>\n                                <button mat-icon-button color=\"warn\" aria-label=\"delete\" [disabled]=\"i == 0\"\n                                    (click)=\"removePerson(i)\">\n                                    <mat-icon>delete_outline</mat-icon>\n                                </button>\n                            </div>\n                            <div fxLayout=\"row wrap\" fxLayoutGap=\"1em\">\n                                <div formArrayName=\"items\"\n                                    *ngFor=\"let personItem of person.get('items')['controls']; let i = index;\">\n                                    <div [formGroupName]=\"i\">\n                                        <mat-checkbox matInput formControlName=\"chippingIn\">\n                                            {{personItem.get('item').value}}\n                                        </mat-checkbox>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div></div>\n                    <button mat-button color=\"primary\" (click)=\"addPerson()\"\n                        [disabled]=\"!peopleForm.valid || ifDuplicatePeople() || !allPeopleHaveAnItem\">\n                        + Add Person\n                    </button>\n                </div>\n            </form>\n        </mat-tab>\n    </mat-tab-group>\n\n    <div class=\"stdMarginLeft stdMarginRight\">\n        <mat-divider></mat-divider>\n    </div>\n\n    <form [formGroup]=\"settingsForm\" fxLayout=\"row\" fxLayoutGap=\"1em\" class=\"stdPadding\">\n        <mat-form-field fxFlex=\"30%\">\n            <input matInput formControlName=\"taxPercentage\" placeholder=\"Tax %\" type=\"number\" min=\"0\" step=\"1\" max=\"100\"\n                oninput=\"validity.valid||(value='');\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"30%\">\n            <input matInput formControlName=\"currencyDP\" placeholder=\"Currency Decimal Places\" type=\"number\" min=\"0\"\n                step=\"1\" max=\"5\" oninput=\"validity.valid||(value='');\">\n        </mat-form-field>\n    </form>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <button mat-raised-button color=\"primary\"\n            [disabled]=\"!itemsForm.valid || ifDuplicateItems() || !peopleForm.valid || ifDuplicatePeople() || !allPeopleHaveAnItem || !settingsForm.valid\"\n            (click)=\"calculate()\">\n            Calculate\n        </button>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}